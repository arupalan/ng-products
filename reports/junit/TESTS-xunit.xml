<?xml version="1.0"?>
<testsuite name="HeadlessChrome 0.0.0 (Mac OS X 10.14.3)" package="" timestamp="2019-03-15T19:28:40" id="0" hostname="Arups-MBP.broadband" tests="60" errors="0" failures="0" time="1.911">
  <properties>
    <property name="browser.fullName" value="Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_3) AppleWebKit/537.36 (KHTML, like Gecko) HeadlessChrome/74.0.3723.0 Safari/537.36"/>
  </properties>
  <testcase name="AboutComponent should create" time="0.142" classname="AboutComponent"/>
  <testcase name="AppComponent should create the app" time="0.145" classname="AppComponent"/>
  <testcase name="AuthenticationGuard should have a canActivate method" time="0.01" classname="AuthenticationGuard"/>
  <testcase name="AuthenticationGuard should return true if user is authenticated" time="0.008" classname="AuthenticationGuard"/>
  <testcase name="AuthenticationGuard should return false and redirect to login if user is not authenticated" time="0.011" classname="AuthenticationGuard"/>
  <testcase name="AuthenticationGuard should save url as queryParam if user is not authenticated" time="0.008" classname="AuthenticationGuard"/>
  <testcase name="AuthenticationService login should return credentials" time="0.063" classname="AuthenticationService"/>
  <testcase name="AuthenticationService login should authenticate user" time="0.007" classname="AuthenticationService"/>
  <testcase name="AuthenticationService login should persist credentials for the session" time="0.016" classname="AuthenticationService"/>
  <testcase name="AuthenticationService login should persist credentials across sessions" time="0.006" classname="AuthenticationService"/>
  <testcase name="AuthenticationService logout should clear user authentication" time="0.008" classname="AuthenticationService"/>
  <testcase name="AuthenticationService logout should clear persisted user authentication" time="0.007" classname="AuthenticationService"/>
  <testcase name="ApiPrefixInterceptor should prepend environment.serverUrl to the request url" time="0.011" classname="ApiPrefixInterceptor"/>
  <testcase name="ApiPrefixInterceptor should not prepend environment.serverUrl to request url" time="0.008" classname="ApiPrefixInterceptor"/>
  <testcase name="CacheInterceptor with default configuration should cache the request" time="0.01" classname="CacheInterceptor"/>
  <testcase name="CacheInterceptor with default configuration should respond from the cache" time="0.008" classname="CacheInterceptor"/>
  <testcase name="CacheInterceptor with default configuration should not cache the request in case of error" time="0.007" classname="CacheInterceptor"/>
  <testcase name="CacheInterceptor with update forced configuration should force cache update" time="0.018" classname="CacheInterceptor"/>
  <testcase name="ErrorHandlerInterceptor should catch error and call error handler" time="0.011" classname="ErrorHandlerInterceptor"/>
  <testcase name="HttpCacheService setCacheData should set cache data" time="0.007" classname="HttpCacheService"/>
  <testcase name="HttpCacheService setCacheData should replace existing data" time="0.006" classname="HttpCacheService"/>
  <testcase name="HttpCacheService setCacheData should set cache date correctly" time="0.006" classname="HttpCacheService"/>
  <testcase name="HttpCacheService getCacheData should return null if no cache" time="0.006" classname="HttpCacheService"/>
  <testcase name="HttpCacheService getCacheData should return cached data if exists" time="0.006" classname="HttpCacheService"/>
  <testcase name="HttpCacheService getCacheData should return cached data with url parameters if exists" time="0.007" classname="HttpCacheService"/>
  <testcase name="HttpCacheService getHttpCacheEntry should return null if no cache" time="0.005" classname="HttpCacheService"/>
  <testcase name="HttpCacheService getHttpCacheEntry should return cached data date  if exists" time="0.009" classname="HttpCacheService"/>
  <testcase name="HttpCacheService clearCacheData should clear existing cache data" time="0.007" classname="HttpCacheService"/>
  <testcase name="HttpCacheService clearCacheData should do nothing if no cache exists" time="0.007" classname="HttpCacheService"/>
  <testcase name="HttpCacheService cleanCache should clear all cache if no date is specified" time="0.007" classname="HttpCacheService"/>
  <testcase name="HttpCacheService cleanCache should clear existing since specified date" time="0.009" classname="HttpCacheService"/>
  <testcase name="HttpCacheService cleanCache should not affect cache entries newer than specified date" time="0.014" classname="HttpCacheService"/>
  <testcase name="HttpCacheService setPersistence should clear previous cache data when persistence value change" time="0.011" classname="HttpCacheService"/>
  <testcase name="HttpCacheService setPersistence should persist cache to local storage" time="0.011" classname="HttpCacheService"/>
  <testcase name="HttpCacheService setPersistence should persist cache to session storage" time="0.007" classname="HttpCacheService"/>
  <testcase name="HttpService should use error handler, API prefix and no cache by default" time="0.012" classname="HttpService"/>
  <testcase name="HttpService should use cache" time="0.013" classname="HttpService"/>
  <testcase name="HttpService should skip error handler" time="0.01" classname="HttpService"/>
  <testcase name="HttpService should not use API prefix" time="0.01" classname="HttpService"/>
  <testcase name="I18nService extract should not modify string" time="0.008" classname="I18nService"/>
  <testcase name="I18nService init should init with default language" time="0.011" classname="I18nService"/>
  <testcase name="I18nService init should init with save language" time="0.011" classname="I18nService"/>
  <testcase name="I18nService set language should change current language" time="0.007" classname="I18nService"/>
  <testcase name="I18nService set language should change current language without a region match" time="0.006" classname="I18nService"/>
  <testcase name="I18nService set language should change current language to default if unsupported" time="0.008" classname="I18nService"/>
  <testcase name="I18nService get language should return current language" time="0.012" classname="I18nService"/>
  <testcase name="Logger should create an instance" time="0" classname="Logger"/>
  <testcase name="Logger should add a new LogOutput and receives log entries" time="0.001" classname="Logger"/>
  <testcase name="Logger should add a new LogOutput and receives only production log entries" time="0" classname="Logger"/>
  <testcase name="LoginComponent should create" time="0.466" classname="LoginComponent"/>
  <testcase name="ProductComponent should create" time="0.059" classname="ProductComponent"/>
  <testcase name="ProductService getProduct should return a Products" time="0.022" classname="ProductService"/>
  <testcase name="LoaderComponent should not be visible by default" time="0.012" classname="LoaderComponent"/>
  <testcase name="LoaderComponent should be visible when app is loading" time="0.014" classname="LoaderComponent"/>
  <testcase name="LoaderComponent should not display a message by default" time="0.013" classname="LoaderComponent"/>
  <testcase name="LoaderComponent should display specified message" time="0.018" classname="LoaderComponent"/>
  <testcase name="HeaderComponent should create" time="0.307" classname="HeaderComponent"/>
  <testcase name="ShellComponent should create" time="0.262" classname="ShellComponent"/>
  <testcase name="ShellModule should create an instance" time="0" classname="ShellModule"/>
  <testcase name="Shell childRoutes should create routes as children of shell" time="0" classname="Shell"/>
  <system-out>
    <![CDATA[
]]>
  </system-out>
  <system-err/>
</testsuite>